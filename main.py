import os
import telebot
import openai
from gtts import gTTS

# –¢–æ–∫–µ–Ω—ã
BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_KEY = os.getenv("OPENAI_API_KEY")

bot = telebot.TeleBot(BOT_TOKEN)
openai.api_key = OPENAI_KEY

# –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã
mode = "auto"  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é auto

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
@bot.message_handler(commands=['teacher_on'])
def set_teacher(message):
    global mode
    mode = "teacher"
    bot.reply_to(message, "üßë‚Äçüè´ –†–µ–∂–∏–º —É—á–∏—Ç–µ–ª—è: –≤—Å–µ–≥–¥–∞ –∏—Å–ø—Ä–∞–≤–ª—è—é –∏ –æ–±—ä—è—Å–Ω—è—é.")

@bot.message_handler(commands=['teacher_off'])
def set_chat(message):
    global mode
    mode = "chat"
    bot.reply_to(message, "üí¨ –†–µ–∂–∏–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞: —Ç–æ–ª—å–∫–æ –æ–±—â–µ–Ω–∏–µ, –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.")

@bot.message_handler(commands=['mix'])
def set_mix(message):
    global mode
    mode = "mix"
    bot.reply_to(message, "üîÄ –†–µ–∂–∏–º mix: –∏—Å–ø—Ä–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—à—å.")

@bot.message_handler(commands=['auto'])
def set_auto(message):
    global mode
    mode = "auto"
    bot.reply_to(message, "ü§ñ –†–µ–∂–∏–º auto: –∏—Å–ø—Ä–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏. –ï—Å–ª–∏ –∑–∞–¥–∞—ë—à—å –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É ‚Äî –æ–±—ä—è—Å–Ω—è—é.")

@bot.message_handler(commands=['status'])
def get_status(message):
    bot.reply_to(message, f"–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {mode}")

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
def generate_reply(user_text):
    global mode

    if mode == "teacher":
        system = (
            "–¢—ã —Å—Ç—Ä–æ–≥–∏–π —É—á–∏—Ç–µ–ª—å –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞. "
            "–ï—Å–ª–∏ —É—á–µ–Ω–∏–∫ –ø–∏—à–µ—Ç –ø–æ-–Ω–µ–º–µ—Ü–∫–∏ ‚Äî —Å–Ω–∞—á–∞–ª–∞ –∫–æ—Ä–æ—Ç–∫–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º, "
            "–ø–æ—Ç–æ–º —É–∫–∞–∂–∏ –∏ –æ–±—ä—è—Å–Ω–∏ –≤—Å–µ –æ—à–∏–±–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º. "
            "–ï—Å–ª–∏ —É—á–µ–Ω–∏–∫ –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏–ª–∏ –æ—à–∏–±–∫–∏ ‚Äî "
            "–ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω–∏ –ø—Ä–∞–≤–∏–ª–æ –∏ –¥–∞–π –ø—Ä–∏–º–µ—Ä—ã. "
            "–ü–æ—Å–ª–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –≤–µ—Ä–Ω–∏—Å—å –∫ –æ–±—ã—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É —É—á–∏—Ç–µ–ª—è."
        )

    elif mode == "auto":
        system = (
            "–¢—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∏ —Å—Ç—Ä–æ–≥–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞. "
            "1. –ï—Å–ª–∏ —É—á–µ–Ω–∏–∫ –ø–∏—à–µ—Ç –ø–æ-–Ω–µ–º–µ—Ü–∫–∏ ‚Äî —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), "
            "–ø–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä—å –Ω–∞ –æ—à–∏–±–∫–∏. "
            "–ï—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –æ—à–∏–±–∫–∞ (–≥—Ä–∞–º–º–∞—Ç–∏–∫–∞, –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤, –ª–µ–∫—Å–∏–∫–∞) ‚Äî –∏—Å–ø—Ä–∞–≤—å –∏ –æ–±—ä—è—Å–Ω–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º. "
            "–ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç ‚Äî –Ω–∞–ø–∏—à–∏ '–û—à–∏–±–æ–∫ –Ω–µ—Ç'. "
            "2. –ï—Å–ª–∏ —É—á–µ–Ω–∏–∫ –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏–ª–∏ –æ—à–∏–±–∫–∏ ‚Äî "
            "–ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω–∏ –ø—Ä–∞–≤–∏–ª–æ –∏ –¥–∞–π –ø—Ä–∏–º–µ—Ä—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º. "
            "3. –ü–æ—Å–ª–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –≤–µ—Ä–Ω–∏—Å—å –≤ —Ä–µ–∂–∏–º auto."
        )

    elif mode == "chat":
        system = "–¢—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø–æ-–Ω–µ–º–µ—Ü–∫–∏, –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π."

    elif mode == "mix":
        system = (
            "–¢—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º. "
            "–ò—Å–ø—Ä–∞–≤–ª—è–π –æ—à–∏–±–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä—è–º–æ –ø–æ–ø—Ä–æ—Å–∏—Ç ('–∏—Å–ø—Ä–∞–≤—å', 'korrigiere')."
        )

    else:
        system = "–¢—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º."

    response = openai.ChatCompletion.create(
        model="gpt-4o-mini",
        messages=[
            {"role": "system", "content": system},
            {"role": "user", "content": user_text}
        ]
    )
    return response.choices[0].message["content"]

# –û—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç
@bot.message_handler(content_types=['text'])
def handle_text(message):
    answer = generate_reply(message.text)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
    bot.reply_to(message, answer)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (—Ç–æ–ª—å–∫–æ –Ω–µ–º–µ—Ü–∫–∞—è —á–∞—Å—Ç—å)
    german_part = answer.split("‚úçÔ∏è")[0].strip().split("–û—à–∏–±–æ–∫ –Ω–µ—Ç")[0].strip()
    if german_part:
        tts = gTTS(text=german_part, lang="de")
        filename = "voice.mp3"
        tts.save(filename)
        with open(filename, "rb") as f:
            bot.send_voice(message.chat.id, f)

print("ü§ñ Bot l√§uft...")
bot.polling()
